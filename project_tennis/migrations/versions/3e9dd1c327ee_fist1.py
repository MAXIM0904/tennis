"""Fist1

Revision ID: 3e9dd1c327ee
Revises: 
Create Date: 2022-12-28 14:34:18.267810

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3e9dd1c327ee'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('fkIdx_scridf', table_name='scores')
    op.drop_index('fkIdx_scrids', table_name='scores')
    op.drop_table('scores')
    op.drop_table('strings')
    op.drop_index('fkidx_tournamentcity', table_name='tournaments')
    op.drop_table('tournaments')
    op.drop_index('fkidx_ratidp', table_name='ratings')
    op.drop_index('fkidx_ratids', table_name='ratings')
    op.drop_table('ratings')
    op.drop_table('global_notifications')
    op.drop_table('nefediev')
    op.drop_index('fkidx_sratidp', table_name='seasonal_ratings')
    op.drop_index('fkidx_sratids', table_name='seasonal_ratings')
    op.drop_table('seasonal_ratings')
    op.drop_index('fkidx_baccruid', table_name='bonus_accruals')
    op.drop_table('bonus_accruals')
    op.drop_table('accounting_categories')
    op.drop_index('fkidx_eventidc', table_name='events')
    op.drop_table('events')
    op.drop_index('fkIdx_gop', table_name='game_orders')
    op.drop_table('game_orders')
    op.drop_table('quizzes')
    op.drop_index('fkidx_pymtuid', table_name='payments')
    op.drop_table('payments')
    op.drop_index('fkidx_eregidp', table_name='event_registrations')
    op.drop_index('fkidx_eregids', table_name='event_registrations')
    op.drop_table('event_registrations')
    op.drop_table('brands')
    op.drop_table('countries')
    op.drop_index('fkidx_ballbrand', table_name='balls')
    op.drop_table('balls')
    op.drop_index('fkidx_acctcatid', table_name='accounts')
    op.drop_index('fkidx_acctiuid', table_name='accounts')
    op.drop_index('fkidx_acctruid', table_name='accounts')
    op.drop_index('fkidx_acctuid', table_name='accounts')
    op.drop_table('accounts')
    op.drop_table('tennis_sites')
    op.drop_index('fkidx_playercity', table_name='players')
    op.drop_index('fkidx_playeroffline_tournament', table_name='players')
    op.drop_index('fkidx_playertournament', table_name='players')
    op.drop_table('players')
    op.drop_table('keywords')
    op.drop_table('confirmation_codes')
    op.drop_table('district')
    op.drop_table('versions')
    op.drop_table('racquet')
    op.drop_table('products')
    op.drop_table('user_survey')
    op.drop_index('fkidx_dratidp', table_name='doubles_ratings')
    op.drop_index('fkidx_dratids', table_name='doubles_ratings')
    op.drop_table('doubles_ratings')
    op.drop_index('fkidx_verchid', table_name='version_changes')
    op.drop_table('version_changes')
    op.drop_index('fkidx_citycountry', table_name='cities')
    op.drop_table('cities')
    op.drop_index('fkidx_pbballs', table_name='players_balls')
    op.drop_index('fkidx_pbplayers', table_name='players_balls')
    op.drop_table('players_balls')
    op.drop_table('favorite')
    op.drop_index('fkidx_scridfo', table_name='doubles_scores')
    op.drop_index('fkidx_scridft', table_name='doubles_scores')
    op.drop_index('fkidx_scridso', table_name='doubles_scores')
    op.drop_index('fkidx_scridst', table_name='doubles_scores')
    op.drop_table('doubles_scores')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doubles_scores',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('doubles_scores_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('f_one_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('f_two_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('s_one_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('s_two_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('match_won', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('first_set_f', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_set_s', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_set_tie_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('first_set_tie_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('second_set_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('second_set_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('second_set_tie_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('second_set_tie_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('third_set_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('third_set_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('third_set_tie_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('third_set_tie_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('played_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('fourth_set_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fourth_set_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fourth_set_tie_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fourth_set_tie_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fifth_set_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fifth_set_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fifth_set_tie_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fifth_set_tie_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sets', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['f_one_id'], ['players.id'], name='fk_scridfo'),
    sa.ForeignKeyConstraint(['f_two_id'], ['players.id'], name='fk_scridft'),
    sa.ForeignKeyConstraint(['s_one_id'], ['players.id'], name='fk_scridso'),
    sa.ForeignKeyConstraint(['s_two_id'], ['players.id'], name='fk_scridst'),
    sa.PrimaryKeyConstraint('id', name='doubles_scores_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('fkidx_scridst', 'doubles_scores', ['s_two_id'], unique=False)
    op.create_index('fkidx_scridso', 'doubles_scores', ['s_one_id'], unique=False)
    op.create_index('fkidx_scridft', 'doubles_scores', ['f_two_id'], unique=False)
    op.create_index('fkidx_scridfo', 'doubles_scores', ['f_one_id'], unique=False)
    op.create_table('favorite',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_user', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('id_favorite', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_favorite'], ['players.id'], name='id_favorite_fk', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_user'], ['players.id'], name='id_user_fk', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='favorite_pkey')
    )
    op.create_table('players_balls',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ball_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('vote', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('durability', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ball_id'], ['balls.id'], name='fk_pbballs'),
    sa.PrimaryKeyConstraint('id', name='players_balls_pkey')
    )
    op.create_index('fkidx_pbplayers', 'players_balls', ['player_id'], unique=False)
    op.create_index('fkidx_pbballs', 'players_balls', ['ball_id'], unique=False)
    op.create_table('cities',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cities_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('channel_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('chat_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('chat_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('play_tennis_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], name='fk_citycountry'),
    sa.PrimaryKeyConstraint('id', name='cities_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('fkidx_citycountry', 'cities', ['country_id'], unique=False)
    op.create_table('version_changes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('version_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('change', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['version_id'], ['versions.id'], name='fk_verchid'),
    sa.PrimaryKeyConstraint('id', name='version_changes_pkey')
    )
    op.create_index('fkidx_verchid', 'version_changes', ['version_id'], unique=False)
    op.create_table('doubles_ratings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('score_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('rd', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('is_mixed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['score_id'], ['doubles_scores.id'], name='fk_dratids'),
    sa.ForeignKeyConstraint(['user_id'], ['players.id'], name='fk_dratidp'),
    sa.PrimaryKeyConstraint('id', name='doubles_ratings_pkey')
    )
    op.create_index('fkidx_dratids', 'doubles_ratings', ['score_id'], unique=False)
    op.create_index('fkidx_dratidp', 'doubles_ratings', ['user_id'], unique=False)
    op.create_table('user_survey',
    sa.Column('question', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('answer_0', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('answer_1', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('answer_2', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('published', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('answer_3', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_survey_pkey')
    )
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('category', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('published', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('publication_date', sa.DATE(), server_default=sa.text("('now'::text)::date"), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='products_pkey')
    )
    op.create_table('racquet',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='racquet_pkey')
    )
    op.create_table('versions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('main', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('major', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('minor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='versions_pkey')
    )
    op.create_table('district',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('district_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('cityid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cityid'], ['cities.id'], name='district_fk', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='district_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('confirmation_codes',
    sa.Column('phone', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='confirmation_codes_pkey')
    )
    op.create_table('keywords',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('word', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='keywords_pkey')
    )
    op.create_table('players',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('phone', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('experience', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('initial_rating', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('primary_location', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('secondary_location', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_male', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('registered_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_full_reg', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('rating', sa.REAL(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('is_bot_blocked', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('username', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('doubles_rating', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('mixed_rating', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('city_id', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('referral', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('referral_other', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('racquet', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('racquet_detail', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('global_notification', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('tournament_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('corporation', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('play_tennis_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('city_other', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('offline_tournament_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('district_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('birth_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('game_style', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_right_hand', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_one_backhand', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('ground', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('shoes_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('strings_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('club', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_аctivity_date', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], name='fk_playercity'),
    sa.ForeignKeyConstraint(['district_id'], ['district.id'], name='district_fk'),
    sa.ForeignKeyConstraint(['offline_tournament_id'], ['events.id'], name='fk_playeroffline_tournament'),
    sa.ForeignKeyConstraint(['strings_id'], ['strings.id'], name='strings_fk'),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], name='fk_playertournament'),
    sa.PrimaryKeyConstraint('id', name='players_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('fkidx_playertournament', 'players', ['tournament_id'], unique=False)
    op.create_index('fkidx_playeroffline_tournament', 'players', ['offline_tournament_id'], unique=False)
    op.create_index('fkidx_playercity', 'players', ['city_id'], unique=False)
    op.create_table('tennis_sites',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('phone', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('location', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('working_time', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('quality', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('winter', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('summer', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cloakroom', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('shower', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('parking', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('light', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('gmaps_url', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('metro_station', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('metro_distance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('price_winter_wd', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('price_winter_we', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('price_summer_wd', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('price_summer_we', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('courts', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('shop', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('stringer', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('contact', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('phone_extra', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('contact_extra', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('gym', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('wall', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('cafe', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('published', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('pay_cash', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('pay_card', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('pool', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('phone_ext', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pay_transfer', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('city_id', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DATE(), server_default=sa.text("('now'::text)::date"), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], name='fk_tennissitecity'),
    sa.PrimaryKeyConstraint('id', name='tennis_sites_pkey')
    )
    op.create_table('accounts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('accounted_at', sa.DATE(), server_default=sa.text("('now'::text)::date"), autoincrement=False, nullable=True),
    sa.Column('ref_user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('inp_user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['accounting_categories.id'], name='fk_acctcatid'),
    sa.ForeignKeyConstraint(['inp_user_id'], ['players.id'], name='fk_acctiuid'),
    sa.ForeignKeyConstraint(['ref_user_id'], ['players.id'], name='fk_acctruid'),
    sa.ForeignKeyConstraint(['user_id'], ['players.id'], name='fk_acctuid'),
    sa.PrimaryKeyConstraint('id', name='accounts_pkey')
    )
    op.create_index('fkidx_acctuid', 'accounts', ['user_id'], unique=False)
    op.create_index('fkidx_acctruid', 'accounts', ['user_id'], unique=False)
    op.create_index('fkidx_acctiuid', 'accounts', ['user_id'], unique=False)
    op.create_index('fkidx_acctcatid', 'accounts', ['category_id'], unique=False)
    op.create_table('balls',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('surface', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quality', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('img', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name='fk_ballbrand'),
    sa.PrimaryKeyConstraint('id', name='balls_pkey')
    )
    op.create_index('fkidx_ballbrand', 'balls', ['brand_id'], unique=False)
    op.create_table('countries',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('countries_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('flag', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('play_tennis_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='countries_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('brands',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='brands_pkey')
    )
    op.create_table('event_registrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('event_location', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_option', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('money_paid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('desired_time', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('registered_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('extra_game', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name='fk_eregide'),
    sa.ForeignKeyConstraint(['user_id'], ['players.id'], name='fk_eregidp'),
    sa.PrimaryKeyConstraint('id', name='event_registrations_pkey')
    )
    op.create_index('fkidx_eregids', 'event_registrations', ['event_id'], unique=False)
    op.create_index('fkidx_eregidp', 'event_registrations', ['user_id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('payed_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['players.id'], name='fk_pymtuid'),
    sa.PrimaryKeyConstraint('id', name='payments_pkey')
    )
    op.create_index('fkidx_pymtuid', 'payments', ['user_id'], unique=False)
    op.create_table('quizzes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('question', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('answer_0', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('answer_1', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('answer_2', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('answer_3', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('answer_4', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('correct_answer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('explanation', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('published', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('quiz_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='quizzes_pkey')
    )
    op.create_table('game_orders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('loc_szao', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('loc_sao', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('loc_svao', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('loc_zao', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('loc_cao', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('loc_vao', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('loc_uzao', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('loc_uao', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('loc_uvao', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('game_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('game_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('game_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tennis_site', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('pay', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('game_time_hh', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['players.id'], name='FK_gop'),
    sa.PrimaryKeyConstraint('id', name='game_orders_pkey')
    )
    op.create_index('fkIdx_gop', 'game_orders', ['user_id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('events_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('title_explained', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('n', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('location', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sets', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('advantage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('surface', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_open', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('courts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('payment_bank_one', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('payment_card_number_one', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('payment_bank_two', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('payment_card_number_two', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('city_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tg_group', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('img', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tennis_site', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], name='fk_eventidc'),
    sa.PrimaryKeyConstraint('id', name='events_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('fkidx_eventidc', 'events', ['city_id'], unique=False)
    op.create_table('accounting_categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='accounting_categories_pkey')
    )
    op.create_table('bonus_accruals',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('accounted_at', sa.DATE(), server_default=sa.text("('now'::text)::date"), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['players.id'], name='fk_baccruid'),
    sa.PrimaryKeyConstraint('id', name='bonus_accruals_pkey')
    )
    op.create_index('fkidx_baccruid', 'bonus_accruals', ['user_id'], unique=False)
    op.create_table('seasonal_ratings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('score_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('seasonal_rating', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('power_diff', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('rp', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('season', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['score_id'], ['scores.id'], name='fk_sratids'),
    sa.ForeignKeyConstraint(['user_id'], ['players.id'], name='fk_sratidp'),
    sa.PrimaryKeyConstraint('id', name='seasonal_ratings_pkey')
    )
    op.create_index('fkidx_sratids', 'seasonal_ratings', ['score_id'], unique=False)
    op.create_index('fkidx_sratidp', 'seasonal_ratings', ['user_id'], unique=False)
    op.create_table('nefediev',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fullname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('username', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_bot', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('tennis_site', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='nefediev_pkey')
    )
    op.create_table('global_notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='global_notifications_pkey')
    )
    op.create_table('ratings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('score_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('rd', sa.REAL(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['players.id'], name='fk_ratidp'),
    sa.PrimaryKeyConstraint('id', name='ratings_pkey')
    )
    op.create_index('fkidx_ratids', 'ratings', ['score_id'], unique=False)
    op.create_index('fkidx_ratidp', 'ratings', ['user_id'], unique=False)
    op.create_table('tournaments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tournaments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('category', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('n', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('city_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('location', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fill_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('players', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], name='fk_tournamentcity'),
    sa.PrimaryKeyConstraint('id', name='tournaments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('fkidx_tournamentcity', 'tournaments', ['city_id'], unique=False)
    op.create_table('strings',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('strings_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='strings_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('scores',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('f_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('s_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('match_won', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('first_set_f', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_set_s', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_set_tie_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('first_set_tie_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('second_set_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('second_set_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('second_set_tie_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('second_set_tie_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('third_set_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('third_set_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('third_set_tie_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('third_set_tie_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('played_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('fourth_set_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fourth_set_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fourth_set_tie_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fourth_set_tie_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fifth_set_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fifth_set_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fifth_set_tie_f', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fifth_set_tie_s', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sets', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['f_id'], ['players.id'], name='FK_scridf'),
    sa.ForeignKeyConstraint(['s_id'], ['players.id'], name='FK_scrids'),
    sa.PrimaryKeyConstraint('id', name='scores_pkey')
    )
    op.create_index('fkIdx_scrids', 'scores', ['s_id'], unique=False)
    op.create_index('fkIdx_scridf', 'scores', ['f_id'], unique=False)
    # ### end Alembic commands ###
